project(TTSPSolve)
set(SOURCE main.cpp series.cpp series.h)

add_executable(TTSPSolve ${SOURCE})

target_link_libraries(TTSPSolve inmost)

if(USE_MPI)
    message("linking TTSPSolve with MPI")
    target_link_libraries(TTSPSolve ${MPI_LIBRARIES})
    if(MPI_LINK_FLAGS)
        set_target_properties(TTSPSolve PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
    endif()
endif(USE_MPI)

if(USE_SOLVER)
    if(USE_SOLVER_ANI)
        message("linking TTSPSolve with ani3d and BLAS")
        target_link_libraries(TTSPSolve ani3d ${BLAS_LIBRARIES})
        if(BLAS_LINKER_FLAGS)
            set_target_properties(TTSPSolve PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
        endif()
    endif()
    if(USE_SOLVER_PETSC)
        message("linking TTSPSolve with PETSc")
        target_link_libraries(TTSPSolve ${PETSC_LIBRARIES})
    endif()
    if(USE_SOLVER_TRILINOS)
        message("linking TTSPSolve with Trilinos")
        target_link_libraries(TTSPSolve ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
    endif()
    if(USE_SOLVER_METIS)
        message("linking TTSPSolve with Metis")
        target_link_libraries(TTSPSolve ${METIS_LIBRARIES})
    endif()
    if(USE_SOLVER_MONDRIAAN)
        message("linking TTSPSolve with Mondriaan")
        target_link_libraries(TTSPSolve ${MONDRIAAN_LIBRARIES})
    endif()
    if(USE_SOLVER_SUPERLU)
        message("linking TTSPSolve with SuperLU")
        target_link_libraries(TTSPSolve ${SUPERLU_LIBRARIES})
    endif()
endif()


if(USE_PARTITIONER)
    if(USE_PARTITIONER_ZOLTAN)
        message("linking TTSPSolve with Zoltan")
        target_link_libraries(TTSPSolve ${ZOLTAN_LIBRARIES})
    endif()
    if(USE_PARTITIONER_PARMETIS)
        message("linking TTSPSolve with ParMETIS")
        target_link_libraries(TTSPSolve ${PARMETIS_LIBRARIES})
    endif()
endif()


install(TARGETS TTSPSolve EXPORT inmost-targets RUNTIME DESTINATION bin)
